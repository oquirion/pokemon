name: Build and Push Docker Image to AWS ECR
permissions:
  contents: read
  packages: write

on:
  workflow_dispatch: 
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup-NodeJS Version - 20
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install Dependencies
      run: npm install

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4

    # see: https://github.com/aws-actions/configure-aws-credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 2: Log in to Amazon ECR
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true

    - name: Create .env file
      run: |
        echo "REACT_APP_PLATFORM_URL=${{ secrets.REACT_APP_PLATFORM_URL }}" > .env
        echo "REACT_APP_ORGANIZATION_ID=${{ secrets.REACT_APP_ORGANIZATION_ID }}" >> .env
        echo "REACT_APP_API_KEY=${{ secrets.REACT_APP_API_KEY }}" >> .env
        echo "REACT_APP_USER_EMAIL=${{ secrets.REACT_APP_USER_EMAIL }}" >> .env
        echo "REACT_APP_PLATFORM_ENVIRONMENT=${{ secrets.REACT_APP_PLATFORM_ENVIRONMENT }}" >> .env
        echo "REACT_APP_SERVER_PORT=${{ secrets.REACT_APP_SERVER_PORT }}" >> .env
        echo "REACT_APP_TOKEN_ENDPOINT=${{ secrets.REACT_APP_TOKEN_ENDPOINT }}" >> .env

    # Step 3: Build the Docker image
    - name: Build the Docker image
      run: |
        docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest .

    # Step 4: Tag the Docker image
    - name: Tag Docker image
      run: |
        docker tag ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

    # Step 5: Push the Docker image to Amazon ECR
    - name: Push Docker image to Amazon ECR
      run: |
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:latest
        docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Force new ECS deployment
        run: |
          aws ecs update-service \
            --cluster Pokemon-cluster \
            --service IacStack-MyFargateService8825BC17-TUe5gVcbC3kv \
            --force-new-deployment